services:
  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    restart: unless-stopped
    ports:
      - "11434:11434"
    environment:
      - OLLAMA_USE_GPU=${OLLAMA_USE_GPU:-false}
      - OLLAMA_KEEP_ALIVE=30s
      - OLLAMA_NUM_THREADS=4
      - OLLAMA_NUM_PARALLEL=1
      - OMP_NUM_THREADS=4
      - OPENBLAS_NUM_THREADS=4
      - EMBEDDING_MODEL_PROVIDER=ollama
      - EMBEDDING_MODEL=nomic-embed-text
    healthcheck:
      test: ["CMD", "ollama", "list"]
      interval: 10s
      timeout: 5s
      retries: 30
      start_period: 10s
    volumes:
      - ollama:/root/.ollama

  ollama-init:
    image: ollama/ollama:latest
    depends_on:
      ollama:
        condition: service_healthy
    entrypoint: ["/bin/sh","-lc",
      "echo '>> Waiting for Ollama API...' && \
       until ollama list >/dev/null 2>&1; do sleep 1; done && \
       echo '>> Pull qwen2.5-coder:7b' && ollama pull qwen2.5-coder:7b && \
       echo '>> Pull nomic-embed-text' && ollama pull nomic-embed-text && \
       echo '>> Done.'"
    ]
    restart: "no"

  open-webui:
    image: ghcr.io/open-webui/open-webui:main
    container_name: open-webui
    restart: unless-stopped
    depends_on:
      - ollama
    environment:
      - OLLAMA_BASE_URL=http://ollama:11434
      - ENABLE_RAG_LOCAL=true
      - OLLAMA_NUM_PARALLEL=1
      # - WEBUI_AUTH=False
      - WHISPER_MODEL=large-v3
    ports:
      - "3000:8080"
    volumes:
      - openwebui:/app/backend/data

  proxmox-controller:
    build:
      context: .
    container_name: proxmox-controller
    restart: unless-stopped
    environment:
      # Proxmox API
      - PROXMOX_HOST=${PROXMOX_HOST}
      - PROXMOX_PORT=${PROXMOX_PORT:-8006}
      - PROXMOX_USER=${PROXMOX_USER}
      - PROXMOX_TOKEN_NAME=${PROXMOX_TOKEN_NAME}
      - PROXMOX_TOKEN_VALUE=${PROXMOX_TOKEN_VALUE}
      - PROXMOX_VERIFY_SSL=${PROXMOX_VERIFY_SSL:-False}
      - CORS_ALLOW_ORIGINS=${CORS_ALLOW_ORIGINS:-*}
      # SSH до Proxmox для pct/exec
      - PVE_SSH_HOST=${PVE_SSH_HOST}
      - PVE_SSH_USER=${PVE_SSH_USER:-root}
      - PVE_SSH_KEY_PATH=/keys/pve_id_rsa
      # BlissOS / ADB
      - BLISS_ADB_ADDRESS=${BLISS_ADB_ADDRESS:-}
      - BLISS_ADB_HOST=${BLISS_ADB_HOST:-}
      - BLISS_ADB_PORT=${BLISS_ADB_PORT:-5555}
      - BLISS_ADB_SERIAL=${BLISS_ADB_SERIAL:-}
      - ADB_BINARY=${ADB_BINARY:-}
      - BLISS_OPENAPI_PATH=${BLISS_OPENAPI_PATH:-}
    volumes:
      - ./keys:/keys:ro
      - ./openapi.json:/app/openapi.json:ro
      - ./openapi_bliss.json:/app/openapi_bliss.json:ro
      # Якщо хочеш live-reload коду під час розробки:
      # - ./controller:/app
    # Всі залежності вже встановлені під час збірки образу,
    # тож запускаємо застосунок напряму без повторної установки пакетів
    command: ["uvicorn", "app:app", "--host", "0.0.0.0", "--port", "8000"]

    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 20
      start_period: 10s
    # не обов'язково залежати від ollama:
    # depends_on:
    #   - ollama

volumes:
  ollama:
  openwebui:
