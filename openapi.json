{
  "openapi": "3.1.0",
  "info": {
    "title": "Universal LLM Controller",
    "description": "API для керування Proxmox через LLM. Дозволяє створювати, запускати контейнери, виконувати команди та деплоїти код.",
    "version": "2.0.0"
  },
  "servers": [
    {
      "url": "http://proxmox-controller:8000",
      "description": "Internal Docker network"
    },
    {
      "url": "http://localhost:8000",
      "description": "Local development"
    }
  ],
  "paths": {
    "/agent/profile": {
      "get": {
        "summary": "Профіль агента",
        "description": "Повертає системний промпт, quick-reference та дефолтні параметри для LLM агента.",
        "operationId": "getAgentProfile",
        "tags": ["Agent"],
        "responses": {
          "200": {
            "description": "Профіль агента",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {"type": "string"},
                    "description": {"type": "string"},
                    "version": {"type": "string"},
                    "controller": {
                      "type": "object",
                      "properties": {
                        "base_url": {"type": "string"},
                        "openapi_url": {"type": "string"}
                      }
                    },
                    "defaults": {"type": "object"},
                    "system_prompt": {"type": "string"},
                    "quick_reference": {"type": "string"}
                  }
                },
                "example": {
                  "name": "Proxmox Infrastructure Management Agent",
                  "description": "Autonomous root-level operator for Proxmox VE controlled through the Universal LLM Controller API.",
                  "version": "1.0.0",
                  "controller": {
                    "base_url": "http://proxmox-controller:8000",
                    "openapi_url": "http://proxmox-controller:8000/openapi.json"
                  },
                  "defaults": {
                    "vmid_range": "100-999",
                    "network": "192.168.1.0/24",
                    "gateway": "192.168.1.1",
                    "bridge": "vmbr0",
                    "storage": "local-lvm",
                    "templates": [
                      "local:vztmpl/debian-12-standard_12.2-1_amd64.tar.zst",
                      "local:vztmpl/ubuntu-22.04-standard_22.04-1_amd64.tar.zst"
                    ]
                  },
                  "system_prompt": "...",
                  "quick_reference": "..."
                }
              }
            }
          },
          "400": {
            "description": "Невірні параметри запиту (невалідний vmid, відсутні обов'язкові поля тощо).",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/BadRequestError"}
              }
            }
          },
          "404": {
            "description": "Запитаний контейнер або вузол не знайдено.",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/NotFoundError"}
              }
            }
          },
          "500": {
            "description": "Внутрішня помилка контролера або Proxmox.",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/InternalServerError"}
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "summary": "Перевірка статусу API",
        "operationId": "checkHealth",
        "tags": ["System"],
        "responses": {
          "200": {
            "description": "API працює",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string" },
                    "version": { "type": "string" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Невірні параметри запиту (невалідний vmid, відсутні обов'язкові поля тощо).",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/BadRequestError"}
              }
            }
          },
          "404": {
            "description": "Запитаний контейнер або вузол не знайдено.",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/NotFoundError"}
              }
            }
          },
          "500": {
            "description": "Внутрішня помилка контролера або Proxmox.",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/InternalServerError"}
              }
            }
          }
        }
      }
    },
    "/version": {
      "get": {
        "summary": "Версія Proxmox VE",
        "description": "Повертає інформацію про встановлену версію Proxmox VE так само, як ``/api2/json/version``.",
        "operationId": "getProxmoxVersion",
        "tags": ["Proxmox"],
        "responses": {
          "200": {
            "description": "Версія Proxmox VE",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "version": { "type": "string", "description": "Повна версія (наприклад, 8.1-2)" },
                    "release": { "type": "string", "description": "Основний реліз" },
                    "repoid": { "type": "string", "description": "Ідентифікатор репозиторію" },
                    "name": { "type": "string", "description": "Назва продукту" }
                  },
                  "additionalProperties": true
                },
                "example": {
                  "version": "8.1-2",
                  "release": "8.1",
                  "repoid": "8a0f1d3c",
                  "name": "Proxmox Virtual Environment"
                }
              }
            }
          },
          "400": {
            "description": "Невірні параметри запиту (невалідний vmid, відсутні обов'язкові поля тощо).",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/BadRequestError"}
              }
            }
          },
          "404": {
            "description": "Запитаний контейнер або вузол не знайдено.",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/NotFoundError"}
              }
            }
          },
          "500": {
            "description": "Внутрішня помилка контролера або Proxmox.",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/InternalServerError"}
              }
            }
          }
        }
      }
    },
    "/nodes": {
      "get": {
        "summary": "Список Proxmox вузлів",
        "description": "Повертає ``nodes.get()`` з Proxmox API. Відповідь містить детальну інформацію про кожен вузол.",
        "operationId": "listNodes",
        "tags": ["Proxmox"],
        "responses": {
          "200": {
            "description": "Список вузлів",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "node": { "type": "string", "description": "Назва вузла" },
                      "status": { "type": "string", "description": "online/offline" },
                      "cpu": { "type": "number", "description": "Поточне використання CPU (0-1)" },
                      "maxcpu": { "type": "integer", "description": "Кількість логічних CPU" },
                      "mem": { "type": "integer", "description": "Використана пам'ять у байтах" },
                      "maxmem": { "type": "integer", "description": "Доступна пам'ять у байтах" },
                      "disk": { "type": "integer", "description": "Використаний диск у байтах" },
                      "maxdisk": { "type": "integer", "description": "Доступний диск у байтах" },
                      "uptime": { "type": "integer", "description": "Час роботи у секундах" },
                      "level": { "type": "string" },
                      "type": { "type": "string" },
                      "id": { "type": "string" },
                      "ssl_fingerprint": { "type": "string" }
                    },
                    "additionalProperties": true
                  }
                },
                "example": [
                  {
                    "node": "pve",
                    "status": "online",
                    "cpu": 0.12,
                    "maxcpu": 16,
                    "mem": 34359738368,
                    "maxmem": 68719476736,
                    "disk": 21474836480,
                    "maxdisk": 85899345920,
                    "uptime": 86400,
                    "level": "",
                    "type": "node",
                    "id": "node/pve",
                    "ssl_fingerprint": "AA:BB:CC:DD"
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Невірні параметри запиту (невалідний vmid, відсутні обов'язкові поля тощо).",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/BadRequestError"}
              }
            }
          },
          "404": {
            "description": "Запитаний контейнер або вузол не знайдено.",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/NotFoundError"}
              }
            }
          },
          "500": {
            "description": "Внутрішня помилка контролера або Proxmox.",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/InternalServerError"}
              }
            }
          }
        }
      }
    },
    "/lxc": {
      "get": {
        "summary": "Список LXC контейнерів",
        "description": "Повертає ``nodes(node).lxc.get()`` з Proxmox API.",
        "operationId": "listLXC",
        "tags": ["LXC"],
        "parameters": [
          {
            "name": "node",
            "in": "query",
            "required": false,
            "schema": { "type": "string" },
            "description": "Назва вузла (наприклад, pve). Якщо не задано — використовується перший вузол, повернений Proxmox."
          }
        ],
        "responses": {
          "200": {
            "description": "Список контейнерів",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "vmid": {
                        "type": "integer",
                        "description": "ID контейнера",
                        "minimum": 100,
                        "maximum": 999
                      },
                      "name": { "type": "string" },
                      "status": { "type": "string" },
                      "node": { "type": "string" },
                      "type": { "type": "string" },
                      "uptime": { "type": "integer", "description": "Час роботи у секундах" },
                      "cpu": { "type": "number", "description": "Частка використання CPU (0-1)" },
                      "cpus": { "type": "integer", "description": "Виділені CPU" },
                      "maxcpu": { "type": "integer" },
                      "mem": { "type": "integer", "description": "Використана пам'ять у байтах" },
                      "maxmem": { "type": "integer", "description": "Виділена пам'ять у байтах" },
                      "disk": { "type": "integer", "description": "Використаний диск у байтах" },
                      "maxdisk": { "type": "integer" },
                      "diskread": { "type": "integer" },
                      "diskwrite": { "type": "integer" },
                      "netin": { "type": "integer" },
                      "netout": { "type": "integer" },
                      "tags": { "type": "string" },
                      "lock": { "type": "string" },
                      "template": { "type": "integer", "description": "1 якщо контейнер є шаблоном" }
                    },
                    "additionalProperties": true
                  }
                },
                "example": [
                  {
                    "vmid": 100,
                    "name": "webserver",
                    "status": "running",
                    "node": "pve",
                    "type": "lxc",
                    "uptime": 5400,
                    "cpu": 0.12,
                    "cpus": 2,
                    "maxcpu": 2,
                    "mem": 536870912,
                    "maxmem": 2147483648,
                    "disk": 3221225472,
                    "maxdisk": 17179869184,
                    "diskread": 1048576,
                    "diskwrite": 524288,
                    "netin": 1048576,
                    "netout": 2097152,
                    "tags": "prod,web",
                    "template": 0
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Невірні параметри запиту (невалідний vmid, відсутні обов'язкові поля тощо).",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/BadRequestError"}
              }
            }
          },
          "404": {
            "description": "Запитаний контейнер або вузол не знайдено.",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/NotFoundError"}
              }
            }
          },
          "500": {
            "description": "Внутрішня помилка контролера або Proxmox.",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/InternalServerError"}
              }
            }
          }
        }
      }
    },
    "/lxc-list": {
      "get": {
        "summary": "Список LXC через pct list",
        "description": "Виконує ``pct list --output-format json`` на Proxmox-хості через SSH. Потрібні змінні середовища ``PVE_SSH_HOST`` та ``PVE_SSH_USER``.",
        "operationId": "listLXCViaSSH",
        "tags": ["LXC"],
        "responses": {
          "200": {
            "description": "Список контейнерів з pct list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "vmid": {
                        "type": "integer",
                        "minimum": 100,
                        "maximum": 999
                      },
                      "status": { "type": "string" },
                      "node": { "type": "string" },
                      "name": { "type": "string" },
                      "type": { "type": "string" },
                      "uptime": { "type": "integer" },
                      "cpu": { "type": "number" },
                      "cpus": { "type": "integer" },
                      "mem": { "type": "integer" },
                      "disk": { "type": "integer" },
                      "diskread": { "type": "integer" },
                      "diskwrite": { "type": "integer" },
                      "netin": { "type": "integer" },
                      "netout": { "type": "integer" }
                    },
                    "additionalProperties": true
                  }
                },
                "example": [
                  {
                    "vmid": 101,
                    "status": "stopped",
                    "node": "pve",
                    "name": "staging-api",
                    "type": "lxc",
                    "uptime": 0,
                    "cpu": 0,
                    "cpus": 2,
                    "mem": 0,
                    "disk": 10737418240,
                    "diskread": 0,
                    "diskwrite": 0,
                    "netin": 0,
                    "netout": 0
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Невірні параметри запиту (невалідний vmid, відсутні обов'язкові поля тощо).",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/BadRequestError"}
              }
            }
          },
          "404": {
            "description": "Запитаний контейнер або вузол не знайдено.",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/NotFoundError"}
              }
            }
          },
          "500": {
            "description": "Внутрішня помилка контролера або Proxmox.",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/InternalServerError"}
              }
            }
          }
        }
      }
    },
    "/lxc/start": {
      "post": {
        "summary": "Запустити LXC контейнер",
        "operationId": "startLXC",
        "tags": ["LXC"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "node": { "type": "string", "description": "Вузол (опціонально)" },
                  "vmid": {
                    "type": "integer",
                    "description": "ID контейнера",
                    "minimum": 100,
                    "maximum": 999
                  }
                },
                "required": ["vmid"]
              },
              "examples": {
                "simple": {
                  "value": { "vmid": 100 }
                },
                "with_node": {
                  "value": { "node": "pve", "vmid": 100 }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Контейнер запущено",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": { "type": "boolean" },
                    "task": { "type": "string", "description": "UPID завдання Proxmox" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Невірні параметри запиту (невалідний vmid, відсутні обов'язкові поля тощо).",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/BadRequestError"}
              }
            }
          },
          "404": {
            "description": "Запитаний контейнер або вузол не знайдено.",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/NotFoundError"}
              }
            }
          },
          "500": {
            "description": "Внутрішня помилка контролера або Proxmox.",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/InternalServerError"}
              }
            }
          }
        }
      }
    },
    "/lxc/stop": {
      "post": {
        "summary": "Зупинити LXC контейнер",
        "operationId": "stopLXC",
        "tags": ["LXC"],
        "parameters": [
          {
            "name": "force",
            "in": "query",
            "required": false,
            "schema": { "type": "boolean", "default": false },
            "description": "Форсована зупинка"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "node": { "type": "string" },
                  "vmid": {
                    "type": "integer",
                    "minimum": 100,
                    "maximum": 999
                  }
                },
                "required": ["vmid"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Контейнер зупинено",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": { "type": "boolean" },
                    "task": { "type": "string", "description": "UPID завдання Proxmox" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Невірні параметри запиту (невалідний vmid, відсутні обов'язкові поля тощо).",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/BadRequestError"}
              }
            }
          },
          "404": {
            "description": "Запитаний контейнер або вузол не знайдено.",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/NotFoundError"}
              }
            }
          },
          "500": {
            "description": "Внутрішня помилка контролера або Proxmox.",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/InternalServerError"}
              }
            }
          }
        }
      }
    },
    "/lxc/create": {
      "post": {
        "summary": "Створити новий LXC контейнер",
        "operationId": "createLXC",
        "tags": ["LXC"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLXCRequest"
              },
              "example": {
                "vmid": 105,
                "hostname": "test-app",
                "cores": 2,
                "memory": 2048,
                "storage": "local-lvm",
                "rootfs_gb": 8,
                "bridge": "vmbr0",
                "ip_cidr": "192.168.1.105/24",
                "gateway": "192.168.1.1",
                "password": "temppass123",
                "ostemplate": "local:vztmpl/debian-12-standard_12.2-1_amd64.tar.zst",
                "start": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Контейнер створено",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "created": { "type": "boolean" },
                    "task": { "type": "string", "description": "UPID завдання Proxmox" },
                    "vmid": {
                      "type": "integer",
                      "minimum": 100,
                      "maximum": 999
                    },
                    "node": { "type": "string" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Невірні параметри запиту (невалідний vmid, відсутні обов'язкові поля тощо).",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/BadRequestError"}
              }
            }
          },
          "404": {
            "description": "Запитаний контейнер або вузол не знайдено.",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/NotFoundError"}
              }
            }
          },
          "500": {
            "description": "Внутрішня помилка контролера або Proxmox.",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/InternalServerError"}
              }
            }
          }
        }
      }
    },
    "/lxc/exec": {
      "post": {
        "summary": "Виконати команду в LXC контейнері",
        "operationId": "execInLXC",
        "tags": ["LXC"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "vmid": {
                    "type": "integer",
                    "description": "ID контейнера",
                    "minimum": 100,
                    "maximum": 999
                  },
                  "cmd": {
                    "type": "string",
                    "description": "Команда для виконання (можна ланцюжити через '&&'). Дозволені лише безпечні утиліти: systemctl, service, journalctl, ls, cat, tail, head, df, du, ps, kill, docker, git, curl, wget, python3, pip, bash, sh, apt, apt-get. Символи ;, |, ` та поодинокий & заборонені."
                  },
                  "commands": {
                    "type": "array",
                    "description": "Альтернатива до 'cmd': список команд, які виконуються послідовно з тими самими обмеженнями, що й для 'cmd'",
                    "items": { "type": "string" }
                  }
                },
                "required": ["vmid"],
                "anyOf": [
                  { "required": ["cmd"] },
                  { "required": ["commands"] }
                ]
              },
              "examples": {
                "list_files": {
                  "value": { "vmid": 100, "cmd": "ls -la /opt" }
                },
                "install_package": {
                  "value": { "vmid": 100, "cmd": "apt-get update && apt-get install -y nginx" }
                },
                "install_multiple": {
                  "value": {
                    "vmid": 100,
                    "commands": [
                      "apt-get update",
                      "apt-get install -y python3-pip"
                    ]
                  }
                },
                "check_service": {
                  "value": { "vmid": 100, "cmd": "systemctl status nginx" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Результат виконання",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "rc": { "type": "integer", "description": "Return code" },
                    "stdout": { "type": "string", "description": "Standard output" },
                    "stderr": { "type": "string", "description": "Standard error" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Невірні параметри запиту (невалідний vmid, відсутні обов'язкові поля тощо).",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/BadRequestError"}
              }
            }
          },
          "404": {
            "description": "Запитаний контейнер або вузол не знайдено.",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/NotFoundError"}
              }
            }
          },
          "500": {
            "description": "Внутрішня помилка контролера або Proxmox.",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/InternalServerError"}
              }
            }
          }
        }
      }
    },
    "/deploy": {
      "post": {
        "summary": "Деплой коду з Git в LXC контейнер",
        "operationId": "deployToLXC",
        "tags": ["Deploy"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeploySpec"
              },
              "examples": {
                "python_app": {
                  "value": {
                    "target_vmid": 100,
                    "repo_url": "https://github.com/user/my-app.git",
                    "workdir": "/opt/my-app",
                    "setup": [
                      "apt-get update",
                      "apt-get install -y git python3 python3-pip"
                    ],
                    "commands": [
                      "git clone {{repo_url}} {{workdir}}",
                      "cd {{workdir}} && pip3 install -r requirements.txt",
                      "cd {{workdir}} && python3 app.py"
                    ]
                  }
                },
                "docker_compose": {
                  "value": {
                    "target_vmid": 101,
                    "repo_url": "https://github.com/user/docker-app.git",
                    "workdir": "/opt/docker-app",
                    "setup": [
                      "apt-get update",
                      "curl -fsSL https://get.docker.com | sh"
                    ],
                    "commands": [
                      "git clone {{repo_url}} {{workdir}}",
                      "cd {{workdir}} && docker compose up -d"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Результат деплою",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": { "type": "boolean" },
                    "steps": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "cmd": { "type": "string", "description": "Команда, що виконувалась" },
                          "rc": { "type": "integer", "description": "Код завершення" },
                          "stdout": { "type": "string", "description": "Стандартний вивід" },
                          "stderr": { "type": "string", "description": "Стандартний потік помилок" }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Невірні параметри запиту (невалідний vmid, відсутні обов'язкові поля тощо).",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/BadRequestError"}
              }
            }
          },
          "404": {
            "description": "Запитаний контейнер або вузол не знайдено.",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/NotFoundError"}
              }
            }
          },
          "500": {
            "description": "Внутрішня помилка контролера або Proxmox.",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/InternalServerError"}
              }
            }
          }
        }
      }
    },
    "/ssh/run": {
      "post": {
        "summary": "Виконати команду через SSH на будь-якому сервері",
        "operationId": "sshRun",
        "tags": ["SSH"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SSHSpec"
              },
              "example": {
                "host": "192.168.1.100",
                "user": "root",
                "cmd": "docker ps",
                "password": "mypassword"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Результат виконання",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "rc": { "type": "integer", "description": "Код завершення" },
                    "stdout": { "type": "string", "description": "Стандартний вивід" },
                    "stderr": { "type": "string", "description": "Стандартний потік помилок" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Невірні параметри запиту (невалідний vmid, відсутні обов'язкові поля тощо).",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/BadRequestError"}
              }
            }
          },
          "404": {
            "description": "Запитаний контейнер або вузол не знайдено.",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/NotFoundError"}
              }
            }
          },
          "500": {
            "description": "Внутрішня помилка контролера або Proxmox.",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/InternalServerError"}
              }
            }
          }
        }
      }
    },
    "/apps/launch": {
      "post": {
        "summary": "Запустити програму на віддаленому сервері",
        "description": "Виконує команду через SSH. Поле ``program`` приймає виконуваний файл (назву в ``$PATH`` або абсолютний шлях), а ``args`` — масив окремих аргументів, які екрануються автоматично. Прапорець ``background`` керує запуском через ``nohup``: якщо ``true``, процес стартує у фоні, stdout/stderr записуються у ``/tmp/<program>.log`` і у відповідь повертається PID; якщо ``false``, команда виконується синхронно й потоки повертаються напряму. Поле ``display`` (наприклад, ``:0``) додає однойменну змінну середовища для GUI-програм.",
        "operationId": "launchRemoteApp",
        "tags": ["Apps"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppLaunchSpec"
              },
              "example": {
                "host": "192.168.1.120",
                "user": "devops",
                "program": "code",
                "args": ["/opt/project"],
                "background": true,
                "display": ":0"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Результат запуску",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "rc": { "type": "integer", "description": "Код завершення" },
                    "stdout": { "type": "string", "description": "Стандартний вивід (у фоновому режимі містить PID процесу)" },
                    "stderr": { "type": "string", "description": "Стандартний потік помилок" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Невірні параметри запиту (невалідний vmid, відсутні обов'язкові поля тощо).",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/BadRequestError"}
              }
            }
          },
          "404": {
            "description": "Запитаний контейнер або вузол не знайдено.",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/NotFoundError"}
              }
            }
          },
          "500": {
            "description": "Внутрішня помилка контролера або Proxmox.",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/InternalServerError"}
              }
            }
          }
        }
      }
    },
    "/browser/open": {
      "post": {
        "summary": "Відкрити URL в браузері на віддаленому сервері",
        "description": "Запускає браузер через SSH. Поле ``action`` підтримує ``open`` (просто завантажити сторінку), ``screenshot`` (зберегти PNG) та ``pdf`` (друк сторінки у PDF). У headless-режимі шукає перший доступний двійковий файл зі списку ``browser_cmds``: для ``screenshot``/``pdf`` результат записується у ``output_path`` або типовий ``/tmp/screenshot.png``/``/tmp/page.pdf``. У GUI-режимі URL відкривається в інтерактивному вікні через ``xdg-open`` або Firefox/Chrome.",
        "operationId": "browserOpen",
        "tags": ["Browser"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BrowserSpec"
              },
              "example": {
                "host": "192.168.1.100",
                "user": "user",
                "password": "pass",
                "action": "open",
                "url": "https://google.com",
                "headless": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Браузер відкрито",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "rc": { "type": "integer" },
                    "stdout": { "type": "string", "description": "Стандартний вивід команди браузера" },
                    "stderr": { "type": "string", "description": "Стандартний потік помилок" },
                    "used": { "type": "string", "description": "Який браузер/інструмент було використано" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Невірні параметри запиту (невалідний vmid, відсутні обов'язкові поля тощо).",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/BadRequestError"}
              }
            }
          },
          "404": {
            "description": "Запитаний контейнер або вузол не знайдено.",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/NotFoundError"}
              }
            }
          },
          "500": {
            "description": "Внутрішня помилка контролера або Proxmox.",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/InternalServerError"}
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CreateLXCRequest": {
        "type": "object",
        "properties": {
          "node": { "type": "string", "description": "Proxmox node (optional)" },
          "vmid": {
            "type": "integer",
            "description": "Container ID (допустимі значення 100-999)",
            "minimum": 100,
            "maximum": 999
          },
          "hostname": { "type": "string", "description": "Container hostname" },
          "cores": { "type": "integer", "default": 2, "minimum": 1 },
          "memory": { "type": "integer", "default": 2048, "minimum": 128, "description": "RAM in MB" },
          "storage": {
            "type": "string",
            "description": "Storage name",
            "enum": ["local-lvm"]
          },
          "rootfs_gb": { "type": "integer", "default": 16, "minimum": 4 },
          "bridge": {
            "type": "string",
            "default": "vmbr0",
            "enum": ["vmbr0"],
            "description": "Network bridge"
          },
          "ip_cidr": {
            "type": "string",
            "description": "IP address with CIDR у підмережі 192.168.1.100-192.168.1.250/24",
            "pattern": "^192\\.168\\.1\\.(?:1\\d\\d|2[0-4]\\d|250)/24$"
          },
          "gateway": { "type": "string", "description": "Gateway IP" },
          "ssh_public_key": { "type": "string", "description": "SSH public key for root" },
          "password": { "type": "string", "description": "Root password" },
          "unprivileged": { "type": "boolean", "default": true },
          "features": {
            "type": "object",
            "description": "Додаткові прапорці pct (наприклад, {\"nesting\": 1, \"keyctl\": 1})",
            "additionalProperties": { "type": "integer" }
          },
          "ostemplate": {
            "type": "string",
            "description": "Template path (debian-12-standard або ubuntu-22.04-standard)",
            "enum": [
              "local:vztmpl/debian-12-standard_12.2-1_amd64.tar.zst",
              "local:vztmpl/ubuntu-22.04-standard_22.04-1_amd64.tar.zst"
            ]
          },
          "start": { "type": "boolean", "default": true, "description": "Start after creation" }
        },
        "required": ["vmid", "hostname", "storage", "ostemplate"]
      },
      "DeploySpec": {
        "type": "object",
        "description": "Кроки деплою, що виконуються всередині контейнера через ``pct exec``. Спершу запускаються команди зі списку ``setup``, після чого виконується ``commands``. Шаблони ``{{repo_url}}`` та ``{{workdir}}`` підставляються автоматично.",
        "properties": {
          "target_vmid": {
            "type": "integer",
            "description": "ID LXC контейнера, у який деплоїмо",
            "minimum": 100,
            "maximum": 999
          },
          "repo_url": { "type": "string", "description": "URL Git репозиторію" },
          "workdir": { "type": "string", "default": "/opt/app", "description": "Каталог у контейнері для коду" },
          "setup": {
            "type": "array",
            "items": { "type": "string" },
            "description": "Команди підготовки (встановлення пакетів, налаштування оточення).",
            "default": [
              "apt-get update",
              "apt-get install -y git curl python3 python3-venv"
            ]
          },
          "commands": {
            "type": "array",
            "items": { "type": "string" },
            "description": "Основні кроки деплою. Підтримують шаблони ``{{repo_url}}`` та ``{{workdir}}``.",
            "default": [
              "git clone {{repo_url}} {{workdir}} || (rm -rf {{workdir}} && git clone {{repo_url}} {{workdir}})",
              "cd {{workdir}} && if [ -f requirements.txt ]; then python3 -m venv .venv && . .venv/bin/activate && pip install -U pip -r requirements.txt; fi",
              "cd {{workdir}} && if [ -f docker-compose.yml ]; then curl -fsSL https://get.docker.com | sh && systemctl start docker && docker compose up -d; fi",
              "cd {{workdir}} && if [ -f Makefile ]; then make run || true; fi"
            ]
          }
        },
        "required": ["target_vmid", "repo_url"]
      },
      "SSHSpec": {
        "type": "object",
        "properties": {
          "host": {
            "type": "string",
            "description": "SSH host or user@host. Supports hostnames, IPv4/IPv6 literals (optionally in [addr] form), optional :port and ssh://user@host:port URIs. Якщо не задано, використовується DEFAULT_SSH_HOST або PVE_SSH_HOST.",
            "example": "root@192.168.1.140:2222"
          },
          "user": {
            "type": "string",
            "default": "root",
            "description": "SSH username. When the host field already contains user@..., that value wins. Якщо поле не задано, використовується DEFAULT_SSH_USER або PVE_SSH_USER (типово root)."
          },
          "port": {
            "type": "integer",
            "default": 22,
            "description": "SSH port to use when the host field does not include one. Може бути заданий через DEFAULT_SSH_PORT або PVE_SSH_PORT."
          },
          "cmd": { "type": "string", "description": "Команда, яку потрібно виконати" },
          "key_path": {
            "type": "string",
            "description": "Шлях до приватного ключа (наприклад, /keys/pve_id_rsa). Якщо не задано, використовується DEFAULT_SSH_KEY_PATH або PVE_SSH_KEY_PATH."
          },
          "key_data_b64": {
            "type": "string",
            "description": "Приватний ключ у форматі base64(OpenSSH). Може використовуватися замість key_path."
          },
          "password": {
            "type": "string",
            "description": "Пароль SSH (альтернатива ключу)."
          },
          "strict_host_key": {
            "type": "boolean",
            "default": false,
            "description": "Чи вимагати сувору перевірку host key"
          },
          "env": {
            "type": "object",
            "description": "Додаткові змінні середовища для команди",
            "additionalProperties": { "type": "string" }
          },
          "cwd": { "type": "string", "description": "Каталог, у якому буде виконано команду" }
        },
        "required": ["cmd"]
      },
      "AppLaunchSpec": {
        "type": "object",
        "properties": {
          "host": {
            "type": "string",
            "description": "SSH-хост. Якщо не задано, використовується DEFAULT_SSH_HOST або PVE_SSH_HOST."
          },
          "user": {
            "type": "string",
            "default": "root",
            "description": "SSH-користувач"
          },
          "port": {
            "type": "integer",
            "default": 22,
            "description": "SSH-порт"
          },
          "key_path": {
            "type": "string",
            "description": "Шлях до приватного ключа SSH"
          },
          "key_data_b64": {
            "type": "string",
            "description": "Приватний ключ у форматі base64(OpenSSH)"
          },
          "password": {
            "type": "string",
            "description": "Пароль SSH"
          },
          "strict_host_key": {
            "type": "boolean",
            "default": false,
            "description": "Чи перевіряти host key"
          },
          "program": {
            "type": "string",
            "description": "Команда для запуску (назва у ``$PATH`` або абсолютний шлях; приклади: firefox, google-chrome, chromium, code, xterm, tmux, bash)"
          },
          "args": {
            "type": "array",
            "items": { "type": "string" },
            "description": "Аргументи командного рядка (кожен елемент передається як окремий токен і екранується автоматично)",
            "default": []
          },
          "env": {
            "type": "object",
            "description": "Додаткові змінні середовища",
            "additionalProperties": { "type": "string" }
          },
          "cwd": { "type": "string", "description": "Каталог виконання" },
          "background": {
            "type": "boolean",
            "default": true,
            "description": "Якщо ``true``, команда запускається через ``nohup`` у фоні з логом у ``/tmp/<program>.log`` і у відповіді повертається PID; якщо ``false``, виконується синхронно"
          },
          "display": {
            "type": "string",
            "description": "DISPLAY для GUI (наприклад, ``:0``); при заданні додається однойменна змінна середовища"
          }
        },
        "required": ["program"]
      },
      "BrowserSpec": {
        "type": "object",
        "properties": {
          "host": {
            "type": "string",
            "description": "SSH-хост для запуску браузера. Якщо не задано, використовується DEFAULT_SSH_HOST або PVE_SSH_HOST."
          },
          "user": {
            "type": "string",
            "default": "root",
            "description": "SSH-користувач. Може братися з DEFAULT_SSH_USER/PVE_SSH_USER."
          },
          "port": {
            "type": "integer",
            "default": 22,
            "description": "SSH-порт. Якщо не задано, можна визначити через DEFAULT_SSH_PORT/PVE_SSH_PORT."
          },
          "key_path": {
            "type": "string",
            "description": "Шлях до приватного ключа SSH"
          },
          "key_data_b64": {
            "type": "string",
            "description": "Приватний ключ у форматі base64(OpenSSH)"
          },
          "password": {
            "type": "string",
            "description": "SSH-пароль"
          },
          "strict_host_key": {
            "type": "boolean",
            "default": false,
            "description": "Чи перевіряти host key"
          },
          "action": {
            "type": "string",
            "enum": ["open", "screenshot", "pdf"],
            "default": "open",
            "description": "``open`` — просто відкриває URL, ``screenshot`` — зберігає PNG-скріншот, ``pdf`` — формує друк сторінки у PDF"
          },
          "url": { "type": "string" },
          "headless": {
            "type": "boolean",
            "default": true,
            "description": "Якщо ``true``, запускає браузер у headless-режимі (результати ``screenshot``/``pdf`` зберігаються у файл). Якщо ``false`` — намагається використати ``xdg-open`` або Firefox/Chrome на GUI."
          },
          "browser_cmds": {
            "type": "array",
            "items": { "type": "string" },
            "default": ["google-chrome", "chromium-browser", "chromium"]
          },
          "window_size": { "type": "string", "default": "1280,800", "description": "Розмір вікна для headless режиму" },
          "user_data_dir": {
            "type": "string",
            "description": "Каталог профілю браузера на віддаленій машині"
          },
          "output_path": {
            "type": "string",
            "description": "Шлях на віддаленій машині для збереження скріншоту або PDF; якщо не задано, використовуються ``/tmp/screenshot.png`` або ``/tmp/page.pdf``"
          },
          "extra_args": {
            "type": "array",
            "items": { "type": "string" },
            "description": "Додаткові аргументи командного рядка для браузера"
          }
        },
        "required": ["url"]
      },
      "BadRequestError": {
        "type": "object",
        "description": "Помилка вхідних параметрів або тіла запиту.",
        "required": ["detail"],
        "properties": {
          "detail": {"type": "string", "description": "Пояснення, які параметри запиту невалідні або відсутні."}
        },
        "example": {"detail": "Invalid vmid: must be between 100 and 999."}
      },
      "NotFoundError": {
        "type": "object",
        "description": "Ресурс (вузол чи контейнер) не знайдено.",
        "required": ["detail"],
        "properties": {
          "detail": {"type": "string", "description": "Описує, який ресурс не вдалося знайти."}
        },
        "example": {"detail": "LXC container 123 not found on node pve."}
      },
      "InternalServerError": {
        "type": "object",
        "description": "Внутрішня помилка контролера або Proxmox.",
        "required": ["detail"],
        "properties": {
          "detail": {"type": "string", "description": "Описує причину внутрішньої помилки."}
        },
        "example": {"detail": "Proxmox API call failed: connection refused."}
      }
    }
  }
}
